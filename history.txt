Утилита для работы с диском.
Фичи:
 + Чтение с диска напрямую (с любого места)
 + Создание имаджей флоппи-дисков (абсолютных копий)
 + Запись имаджей на диск
Ожидается:
 + Запись на диск напрямую (в любое место)
 + Возможность создания boot-дисков
 + Графический интерфейс
 - Мультиплатформенность (отказ от небиосовских прерываний)
------------------------------------------------------------------------------
История:
Программа начата в конце января 2003 г., то есть как раз в разгар сессии.
Самое прикольное - что сессию я до сих пор не сдал. А прогу пишу.
Цель - написать такую сверххакерскую утилитку, с помощью которой можно бы было
разшаривать NTFS, Ext2 и Ext3 разделы, делать абсолютные копии дисков...
Короче всё на низком уровне, что-то вроде модуля в ОС. Что ж, мне самому
интересно, что у меня получится...

Во время написания проги (примерно через четыре дня после начала), мне
форматнули винт. Это отдельная (и очень неприятная) история, погибло много
важной информации, в том числе и эта прога. На тот момент уже были полностью
написаны 70% возможностей работы с диском напрямую (чтение, запись, создание
образов) и полностью написана псевдографика. Я уже хотел браться за работу с
файловой системой...
Но, как я уже сказал, всему пришла хана. Однако, оказалось что одну из старых
бажных версий я кое-кому сбросил. Таким образом, мне не приходится писать всё
с нуля, хотя работы много.

Итак, сейчас 06.02.03, и прога умеет:
 - Скидывать образ флопика в файл.
 - Восстанавливать флопик из файла.
 - Всё :)
Написано 80% псевдографики. Не оптимизировано немного. Кое-где проскакивают
баги (не стираются подсказки), сделано аляповато всё.
Так быстро, как раньше писать не смогу уже. Вдохновения нет, и денег на пиво 
тоже :(

За пару часов сделал вот что:
Вылизал код - есть недоделки, но багов нет. Кое-что подправил, чуть 
оптимизировал... Ё, как пива хотца!
Написал макрос, аналогичный 9-й функции 21-го прерывания, за тем отличием, что
конец строки - не ASCII 36, а ASCII 0 (ASCIIZ - строка). Он, по ходу, чуть
больше весит, но удобно.
Ну и так, по мелочи. Надо бы сам исходник оптимизировать - процедуры разгрести
и отсортировать.
Размер исходника, включая эти комментарии - 14582 байт
Размер файла - 21615 байт
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Переставлена строка подсказки.
Оптимизирован исходник - навигация в коде стала легче.
Написана менюшка выбора дисков, однако диск пока не меняется.
Убрано ограничение на 10 первых дисков (A-J). Теперь доступны диски A-Z
Немного дописана графика. Незначительные изменения интерфейса.
А не отказаться ли мне от хинтов? Кому оно надо? Впрочем, пока оставлю.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
08.02.03.
За вчерашний день ещё немного доработал графику. Самому удивительно, как легко
модифицируется программа - вот что значит грамотное написание.
Не работает ни в какую проверка существования указанного диска. То он выдаёт,
что у меня есть диски D,X,Z, то пишет, что у меня есть только диск A. Потом 
процедура вообще стала выбрасывать из внешней процедуры (вызываю меню выбора
дисков, а оно не реагирует на нажатия клавиши, хотя все проверки происходят
после обработки нажатия). Отладчик вообще глючит на моей проге. Решил оставить
эту байду, и написать прогу пока хотя бы для работы с дискетами.
Начал писать редактор диска. Скорее всего, пока вынесу его в отдельный
бинарник, а когда допишу вставлю процедурой в основной код.
То есть сейчас встаёт задача оптимизировать прогу для работы с флопом.
Поехали.
Написал меню установки параметров чтения. Правда вывод значений происходит
пока в аски форме (был у меня макрос ascii2hex, но стёрся, а переписывать 
лень. Возьму у кого-нибудь, а пока оставлю).
Попутно решил, что нужно писать вывод на экран 9-й функцией INT 10h. Пока нет
конвертора, будем ей выводить, заодно пригодится, когда редактор писать буду.
Меню само не глючит. Опять же дописать только конвертор, и всё.
Решил не делать обратную прокрутку в менюшке - больно гиморно и чревато BUGами
Ещё раз оптимизирую код, и начну писать процедуру чтения сектора.
Прога весит 22586 байт, исходник, вместе с комментариями - 23569 байт.
Надо сделать запрет курсора - он только мешает, всё равно у меня кругом
псевдографика. Кое-что доделать в менюшке.
Обнаружены странные глюки - иногда в тех местах, где надо нажать любую клавишу
её приходится нажимать несколько раз. Также один раз сообщение об ошибке
неправильно закрасилось.
Найдена ошибка при обратном скручивании счётчиков - если скручивать при 
значении=0, то декремент происходит неправильно. Исправить.
Найден ascii2hex конвертор, спасибо Mr. Alf`у. Он его ещё и оптимизировал как
следует! Когда допишу, повышу версию проги.
Ошибка найдена и исправлена. Однако есть интересный прикол: так как счётчик
полностью работает только вперёд, то поставив, допустим, на счётчике секторов
01, декрементируем - инкрементируем - и связанный с ним напрямую счётчик
цилиндров инкрементируется (так как декремента при переходе назад нет). А
вслед за ним инкрементируется и счётчик дорожек :). Решение - написать к
счётчику обратную прокрутку. Или забить, что более предпочтительно. 
Готово - в полноэкранном режиме курсор больше не мешает, однако в виндах он
блинкает ещё хуже...
Кажется, понял, в чём ошибка с нажатием - когда происходит не одна а несколько
ошибок подряд (допустим, имя файла - *.img), то ошибка выдаётся несколько раз.
Пишем наконец чтение сектора.
Читает сектор, успешно. Во время написания было отловлено несколько багов,
и были прокляты люди, придавшие логическую организацию диска. И то: секторы
1-18, цилиндры 0-1, дорожки 0-79. Нет бы везде начинать с одной цифры!
Пишем чтение, и повышаем версию.
Обнаружена опять ошибка. Исправляем.
Ошибка оказалась в том, что происходила запись в файл с атрибутом "Read only".
Прога жутко и страшно ругалась... :) Кстати, прикол: происходила ошибка, а
потом я не мог сразу выйти... И опять же сообщение не перекрашивалось... Хотя
даже в принципе такого быть не может - перекраска заложена в саму процедуру
выдачи сообщения.
Весьма странно - ошибка происходит при запросе сетора выше 8-го. Никакие
другие параметры на ошибку не влияют. Опять же, сообщение не перерисоввывается
как следует, а при выходе из программы повторяется столько раз, сколько раз я
делал запросы... Дебагом её...
Показания, полученные от показателя показали, что ошибка происходит во время
обращения файла, что позволяет её устранить, путём создания ффайла с полным
правом доступа к нему. Неверная перекраска сообщения будет устранена путём
верной его закраски. 
------------------------------------------------------------------------------
Я щас с ума сойду!!! Оказывается, мой код ассемблируется совсем не так, как я
написал в проге... Например код:
create_file proc
	mov ah,3ch
	mov dx,offset failik
	int 21h
	jnc no_err_create
	call error_mes
	call menu	

no_err_create:
	mov handle,ax
ret
endp

скомпилировался вот так (компилировал с отладочной информацией):
int 21h
create_file proc
	mov ah,3ch
	mov dx,offset failik
	call error_mes
	call menu
	mov ax,3d00
	int 21

чему есть документальное поттверждение в виде скриншота. И, как я выяснил,
покопавшись в дизасемблированном коде - это не единственная неправильно
скомпиленная процедура. Что делать - я в отчаянии, всё против меня... :(```
Для начала исправим атрибуты создаваемого файла...
Все глюки пропали, как по волшебству... Но мне многое непонятно...
Всё. Я сошёл с ума, окончательно и безповоротно - перерисовка не работает в
одном случае, но прекрасно выполняется во втором... Усё. Я полетел. Эту багу я
править не буду - авось само рассосётся. Это даже и не бага. Это глюк.
Всё. Пишу, что это версия 0.8 beta и кидаю испытывать одному знакомому ламе...
...бета-тестеру.
Рамер проги - 23308 байт, размер этого исходника - 30561 байт.
В честь моего дня рождения добавил БОЛЬШУЮ заставку...
Оптимизировал прогу на 18432 байт. Как? Похерил буфер, и теперь прога пишет
напрямую в память :)
Мелкие доработки.
Прога приблизилась к релизу. Конечно, пока она умеет всего ничего, но и это
круто. Не буду писать поддержку винтов, и работу с файловыми ситемами до тех
пор пока не сдам сессию. Соответственно и проге называться не Hacker Disk
Utility, а Floppy Disk Utility - встречайте: FDU 1.0
Вес релиза: 7271 байт, вес этого исходника: 33446 байт.
------------------------------------------------------------------------------